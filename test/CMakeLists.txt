SET(NAME_STD_GRAPH_TEST "test_standard_graph") # normal test suite that does not use gtest
SET(NAME_ADJLIST_TEST "test_adj_list")
SET(NAME_EDGEKEY_TEST "test_edgekey")
SET(NAME_TEST_PART "test_partition")
SET(NAME_CONCURRENCY_TEST "test_concurrency")

FILE(GLOB SOURCES_TEST_STD_GRAPH "${PATH_TEST}/test_standard_graph.cpp")
FILE(GLOB SOURCES_TEST_ADJLIST "${PATH_TEST}/test_adj_list.cpp")
FILE(GLOB SOURCES_TEST_EDGEKEY "${PATH_TEST}/test_edgekey.cpp")
FILE(GLOB SOURCES_TEST_PART "${PATH_TEST}/test_partition.cpp")
FILE(GLOB SOURCES_TEST_CONCURRENCY "${PATH_TEST}/test_concurrency.cpp")

# include_directories(${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR})
include_directories("${PATH_SRC}" "${PATH_INCLUDE}")

# Create Test executables
ADD_EXECUTABLE(${NAME_STD_GRAPH_TEST} "${SOURCES_TEST_STD_GRAPH}")
TARGET_INCLUDE_DIRECTORIES(${NAME_STD_GRAPH_TEST} PRIVATE ${PATH_SRC})
TARGET_LINK_LIBRARIES(${NAME_LIB} PUBLIC ${WIREDTIGER_LIB}/libwiredtiger.so)
TARGET_LINK_LIBRARIES(${NAME_STD_GRAPH_TEST} PUBLIC ${NAME_LIB})

ADD_EXECUTABLE(${NAME_TEST_PART} "${SOURCES_TEST_PART}")
TARGET_INCLUDE_DIRECTORIES(${NAME_TEST_PART} PRIVATE ${PATH_SRC} ${UTILS})
TARGET_LINK_LIBRARIES(${NAME_LIB} PUBLIC ${WIREDTIGER_LIB}/libwiredtiger.so)
TARGET_LINK_LIBRARIES(${NAME_TEST_PART} PUBLIC ${NAME_LIB})

ADD_EXECUTABLE(${NAME_ADJLIST_TEST} "${SOURCES_TEST_ADJLIST}")
TARGET_INCLUDE_DIRECTORIES(${NAME_ADJLIST_TEST} PRIVATE ${PATH_SRC})
TARGET_LINK_LIBRARIES(${NAME_LIB} PUBLIC ${WIREDTIGER_LIB}/libwiredtiger.so)
TARGET_LINK_LIBRARIES(${NAME_ADJLIST_TEST} PUBLIC ${NAME_LIB})

ADD_EXECUTABLE(${NAME_EDGEKEY_TEST} "${SOURCES_TEST_EDGEKEY}")
TARGET_INCLUDE_DIRECTORIES(${NAME_EDGEKEY_TEST} PRIVATE ${PATH_SRC})
TARGET_LINK_LIBRARIES(${NAME_LIB} PUBLIC ${WIREDTIGER_LIB}/libwiredtiger.so)
TARGET_LINK_LIBRARIES(${NAME_EDGEKEY_TEST} PUBLIC ${NAME_LIB})
